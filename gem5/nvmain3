
1. gem5 10146 버전을 다운받는다.

나중에 nvamin 패치를 해야 하기 때문에,
nvmain에서 지원하는 gem5버전을 설치해야 한다.
(원래 gem5 버전에서 패치 해야 하니까..)

버전과 주소는 다음과 같으니 참고 한다..
버전 : changeset 10146 27dfed4c8403
주소 : http://repo.gem5.org/gem5/rev/27dfed4c8403

다음 명령어로 10146버전을 받아올 수 있다. 
시간이 조금 소요된다..
hg clone http://repo.gem5.org/gem5/ -r 27dfed4c8403

2. gen5을 컴파일 한다.
scons build/X86/gem5.opt
해당 경로에 해당 파일을 만드는(?) 것이다.
처음엔 build 디렉토리 조차 없다! 괜찮..

3. mq명령어(?)를 사용하기 위해서 다음 작업을 해야 한다.
./.hg/hgrc 파일에 다음 라인을 추가 한다. 
[extensions]는 이미 있을 수도 있다. 한 줄만 추가해도 된다.
이걸 해야지 mq명령어(?)가 먹힌다.

[extensions]
mq = 

4. 유저네임을 적용하기 위해 다음 작업을 해야 한다.
./.hg/hgrc 파일에 다음 라인을 추가 한다. 이걸 해야지 유저네임(?) 같은게 먹힌다.

[ui]
; editor used to enter commit logs, etc.  Most text editors will work.
editor = notepad
username = userEmail@domain.com


/* 버전에 맞는 걸 찾아서 아래와 같이 한다. */  
hg qimport -f /path/to/nvmain/patches/gem5/nvmain-classic-gem5-XXXX
hg qpush

/* fast 파일을 생성 함. 이게 nvmain이 적용 된 것 인듯. 하다..  */
scons EXTRAS=/path/to/nvmain build/X86/gem5.fast

build/X86/gem5.fast configs/example/se.py -c 
tests/test-progs/dkdk/src/main --mem-type=nvmain 
--caches --l2cache --l1i_size 32kB  --l1d_size 32kB 
--l2_size 2MB --nvmain-config=/path/to/nvmain/Config/PCM_MLC_example.config > out



